@model Expense_Tracker_MVC.Models.Budget
@{
    ViewData["Title"] = @TempData["AddOrEdit"];
}

<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.7.1/jquery.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/sweetalert/2.1.2/sweetalert.min.js" integrity="sha512-AA1Bzp5Q0K1KanKKmvN/4d3IRKVlv9PYgwFPvm32nPO6QS8yH1HO7LbgB1pgiOxPtfeg5zEn2ba64MUcqJx6CA==" crossorigin="anonymous" referrerpolicy="no-referrer"></script>


<h2>@TempData["AddOrEdit"]</h2>
<h4>Budget Detail</h4>
<hr />


<div class="row">
    <div class="col-md-4">
   
        <form asp-controller="Budget" asp-action="Edit" id="BudgetForm">

            <div class="form-group mt-3">
                <label asp-for="CategoryName" class="control-label mb-2"></label>

                <select asp-for="CategoryName" class="form-control" asp-items='@ViewBag.CategoryList' id="CategoryName"> 
                    <option  selected disabled> ----- Select the Category ----- </option>
                </select>

                <span asp-validation-for="CategoryName" class="text-danger"></span>
            </div>

            <div class="form-group">
                <label asp-for="BudgetAmount" class="control-label mb-2"></label>
                <input asp-for="BudgetAmount" class="form-control"  id="BudgetAmount" oninput="ValidateAmount()"/>
                <span class="text-danger" id="BugetAmountError"></span>
                <span asp-validation-for="BudgetAmount" class="text-danger"></span>
            </div>

            @*     <div class="">
             
                    <input id="startDate" class="form-control" />
                    <input id="endDate" class="form-control" />
                </div>
            *@
         @*     <div class="form-group">
                <label asp-for="Balance" class="control-label mb-2"></label>
                <input asp-for="Balance" class="form-control" />
                <span asp-validation-for="Balance" class="text-danger"></span>
            </div> *@


            @if (@TempData["AddOrEdit"] == "Create")
            {
                <div class="form-group mt-3">
                    <label asp-for="TimeFrame" class="control-label mb-2"></label>
                    <select asp-for="TimeFrame" class="form-control" id="timeFrame" onchange="dateValidation()" >
                        <option disabled selected>-- Select Time Frame --</option>
                        <option value="Weekly">Weekly</option>
                        <option value="Month">Month</option>
                        <option value="Yearly">Yearly</option>
                        <option value="Other">Others</option>
                    </select>
                    <span asp-validation-for="TimeFrame" class="text-danger"></span>
                </div>
            }
            else
            {
                <div class="form-group mt-3 ">
                    <label asp-for="TimeFrame" class="control-label mb-2"></label>
                    <select asp-for="TimeFrame" class="form-control" id="timeFrame" onchange="dateValidation()" style="pointer-events:none;" readonly>
                        <option disabled selected>-- Select Time Frame --</option>
                        <option value="Weekly">Weekly</option>
                        <option value="Month">Month</option>
                        <option value="Yearly">Yearly</option>
                        <option value="Other">Others</option>
                    </select>
                    <span asp-validation-for="TimeFrame" class="text-danger"></span>
                </div>
            }




            <div class="form-group d-none" id="sd">
                <label asp-for="StartDate" class="control-label mb-2" ></label>
                <input type="date" id="StartDate" asp-for="StartDate" class="form-control" onchange="ValidDateInput()" />
                <span asp-validation-for="StartDate" class="text-danger"></span>
            </div>


            <div class="form-group collapsed d-none" id="ed">
                <label asp-for="EndDate" class="control-label mb-2 " ></label>
                <input type="date" id="EndDate" asp-for="EndDate" class="form-control" onchange="ValidDateInput()" />
                <span id="endDateError"   asp-validation-for="EndDate" class="text-danger"></span>
            </div>


            <div class="form-group mt-4">
                @* <input type="submit" value="Save" class="btn btn-primary  btn-sm" id="submit"> *@
                <input type="button" value="Submit" class="btn btn-primary  btn-sm" onclick="formSubmit()">
                <input type="submit" id="submit" class="d-none">
                <a class="btn btn-sm btn-danger" asp-controller="Budget" asp-action="Index" >Back to List</a>
            </div>
        </form>
    </div>
</div>
@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");

     @if(@TempData["AddOrEdit"] == "Edit"){
     <script>

        $("#CategoryName").prop('disabled',true)
        
     </script>
    }
    }
}


<script>

    function ValidateAmount()
    {
        var amount = $("#BudgetAmount").val()
        if( amount <= 0 )
        {
            $("#BugetAmountError").text("Budget Amount should be greater than 0")
            $("#BugetAmountError").show()
           $("#submit").addClass('disabled');
        } 
        else
        {

          $("#BugetAmountError").hide()
           $("#submit").removeClass('disabled');
        }
    }


  function formSubmit()
  {
    $("#CategoryName").prop('disabled',false);
    console.log("hi ",$("#submit"),$("#submit")[0]);
    $("#submit").click();
    // document.BudgetForm.submit();

  }

    function dateValidation() 
    {
        $("#sd").addClass('d-none')
        $("#ed").addClass('d-none')
           
        var timeFrame = $("#timeFrame").val();
        
        const currentDate = new Date();

        // var day = currentDate.getDate();
        var day = ('0' + currentDate.getDate()).slice(-2);
        console.log("", day)
    

        // var month = currentDate.getMonth() + 1; 
        var month = ('0' + (currentDate.getMonth() + 1)).slice(-2);
        console.log("month:", month)


        var year = currentDate.getFullYear();
        const startDate = `${year}-${month}-${day}`
       

         
            if (timeFrame == "Other")
            {
                $("#sd").removeClass('d-none')
                $("#ed").removeClass('d-none')

                $("#StartDate").val('');
                $("#EndDate").val('');

                $("#StartDate").prop("readonly", false);
                $("#EndDate").prop("readonly", false);


                if($("#StartDate").val() != '' && $("#StartDate").val() != '')
                {
                    ValidDateInput();
                }

            }
            else if (timeFrame == "Month") 
            {
                month++;
                console.log(month)
                const endDate = `${year}-${month}-${day}`


                $("#StartDate").val(startDate);
                $("#EndDate").val(endDate);

                $("#StartDate").prop("readonly", true);
                $("#EndDate").prop("readonly", true);
            }
            else if (timeFrame == "Yearly")
            { 
                const endDate = `${year+1}-${month}-${day}`

                $("#StartDate").val(startDate);
                $("#EndDate").val(endDate);

                $("#StartDate").prop("readonly", true);
                $("#EndDate").prop("readonly", true);
            }
            if(timeFrame == "Weekly")
            {

                // $("#sd").removeClass('d-none')
                // $("#ed").removeClass('d-none')

                var endDate = addWeeks(startDate, 1)

                var day = ('0' + endDate.getDate()).slice(-2);
                var month = ('0' + (endDate.getMonth() + 1) ).slice(-2);
                var year = endDate.getFullYear();
                var end = `${year}-${month}-${day}`

            $("#StartDate").val(startDate);
                $("#EndDate").val(end);
              
                console.log(end)

            }


  }
    function ValidDateInput()
    {
    var startDate = new Date($("#StartDate").val());
    var endDate = new Date($("#EndDate").val());
    if (endDate <= startDate) 
    {
        $("#endDateError").text("EndDate cannot be same or in past of start date");
        $("#endDateError").show();
        $("#submit").addClass('disabled');
    }
    else
    {
        $("#endDateError").hide();
        $("#submit").removeClass('disabled');
    }
    }

    function addWeeks(date, weeks) {
    let dateCopy = new Date(date);
    dateCopy.setDate(dateCopy.getDate()- 1 + 7 * weeks);
    return dateCopy;
}

</script>

